{{ 'section-main-product.css' | asset_url | stylesheet_tag }}
{{ 'section-custom-main-product.css' | asset_url | stylesheet_tag }}
{{ 'product-info-content.css' | asset_url | stylesheet_tag }}
{{ 'product-info-media-slide.css' | asset_url | stylesheet_tag }}
{{ 'product-info-media-tabs.css' | asset_url | stylesheet_tag }}
{{ 'product-info-media-carousel.css' | asset_url | stylesheet_tag }}
{{ 'collapse.css' | asset_url | stylesheet_tag }}
{{ 'line.css' | asset_url | stylesheet_tag }}
{{ 'pickup-availability-list.css' | asset_url | stylesheet_tag }}
{{ 'pickup-availability-item.css' | asset_url | stylesheet_tag }}
{{ 'recipient-form.css' | asset_url | stylesheet_tag }}
{{ 'media.css' | asset_url | stylesheet_tag }}
{{ '3d-model.css' | asset_url | stylesheet_tag }}
{{ 'share-product.css' | asset_url | stylesheet_tag }}
{{ 'sticky-cart.css' | asset_url | stylesheet_tag }}
{{ 'sticky-variant-modal.css' | asset_url | stylesheet_tag }}
{{ 'line-item-property.css' | asset_url | stylesheet_tag }}
{{ 'volume-discount.css' | asset_url | stylesheet_tag }}
{{ 'countdown-timer.css' | asset_url | stylesheet_tag }}
{{ 'inventory-status.css' | asset_url | stylesheet_tag }}
{{ 'complementary-product.css' | asset_url | stylesheet_tag }}



<script>
  window.productVariants = {{ product.variants | json }};
</script>



<div {% render 'section-attr' %}>
  <div class='main-product'>
    <xo-product xo-product-information xo-product-id='{{ product.id }}' xo-section-id='{{ section.id }}' class='main-product__product'>
      {% liquid
        assign current_variant = product.selected_or_first_available_variant
        assign product_form_id = 'product-form-' | append: section.id
        assign product_media_style = section.settings.product_media_style
        assign enable_sticky_cart = section.settings.enable_sticky_cart
        assign gallery_type = section.settings.gallery_type
        assign custom_desktop_image = product.metafields.custom.desktop_image.value
        assign custom_mobile_image = product.metafields.custom.mobile_image.value
      %}
      <xo-container class='main-product__container'>
        
        <div class="main-product__mobile-header">
            {%- if section.settings.show_custom_reviews -%}
                <div class="main-product__reviews">
                  <span class="main-product__rating-average">{{ section.settings.rating_average }}</span>
                  <div class="main-product__stars">
                    {%- capture star_svg -%}<svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 0L12.4469 6.9453L19.7557 7.42084L14.2267 12.1953L15.874 19.099L10 15.0104L4.12596 19.099L5.77329 12.1953L0.244301 7.42084L7.55312 6.9453L10 0Z" fill="#F3A83B"/></svg>{%- endcapture -%}
                    {%- for i in (1..5) -%}{{ star_svg }}{%- endfor -%}
                  </div>
                  <span class="main-product__review-count">{{ section.settings.rating_count }} ratings</span>
                </div>
              {%- endif -%}
              <h1 class="main-product__title">{{ product.title }}</h1>
              {%- if section.settings.subtitle != blank -%}
                <p class="main-product__subtitle">{{ section.settings.subtitle }}</p>
              {%- endif -%}
              <p class="main-product__price" data-main-price>{{ current_variant.price | money }}</p>
        </div>



        <xo-grid class='main-product__grid'>
          <div
            class='main-product__image'
            {% if product_media_style == 'style-2' %}
              style='--xs: 12; --md: 12; --lg: 12'
            {%- else -%}
              style='--xs: 12; --md: 12; --lg: 6; --xl: 6; --xxl: 7'
            {% endif %}
          >
            <div class='main-product__image-content'>
              {% if product_media_style == 'style-1' %}
                {% render 'product-info-media-carousel',
                  zoom_enabled: true,
                  enable_image_zoom: section.settings.enable_image_zoom,
                  variant_images: product.images | where: 'attached_to_variant?', true | map: 'src',
                  gallery_type: gallery_type,
                  show_image_variants_grouping: section.settings.show_image_variants_grouping,
                  custom_desktop_image: custom_desktop_image,
                  custom_mobile_image: custom_mobile_image
                %}
              {%- elsif product_media_style == 'style-2' -%}
                {% render 'product-info-media-slide',
                  zoom_enabled: true,
                  enable_image_zoom: section.settings.enable_image_zoom,
                  variant_images: product.images | where: 'attached_to_variant?', true | map: 'src',
                  gallery_type: gallery_type,
                  show_image_variants_grouping: section.settings.show_image_variants_grouping,
                  custom_desktop_image: custom_desktop_image,
                  custom_mobile_image: custom_mobile_image
                %}
              {% endif %}
            </div>
          </div>
          <div
            class='main-product__content {% if product_media_style == 'style-2' %}main-product__content--pd main-product__content--change{%- endif -%}'
            {% if product_media_style == 'style-2' %}
              style='--xs: 12; --md: 12; --lg: 12;'
            {%- else -%}
              style='--xs: 12; --md: 12; --lg: 6; --xl: 6; --xxl: 5'
            {% endif %}
          >
            <div class="main-product__desktop-header">
              {%- if section.settings.show_custom_reviews -%}
                <div class="main-product__reviews">
                  <span class="main-product__rating-average">{{ section.settings.rating_average }}</span>
                  <div class="main-product__stars">
                    {%- capture star_svg -%}<svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 0L12.4469 6.9453L19.7557 7.42084L14.2267 12.1953L15.874 19.099L10 15.0104L4.12596 19.099L5.77329 12.1953L0.244301 7.42084L7.55312 6.9453L10 0Z" fill="#F3A83B"/></svg>{%- endcapture -%}
                    {%- for i in (1..5) -%}{{ star_svg }}{%- endfor -%}
                  </div>
                  <span class="main-product__review-count">{{ section.settings.rating_count }} ratings</span>
                </div>
              {%- endif -%}
              <h1 class="main-product__title">{{ product.title }}</h1>
              {%- if section.settings.subtitle != blank -%}
                <p class="main-product__subtitle">{{ section.settings.subtitle }}</p>
              {%- endif -%}
              <p class="main-product__price" data-main-price>{{ current_variant.price | money }}</p>
            </div>
            
            <div class="main-product__description">
              {{ product.description }}
            </div>
      
            {%- unless product.has_only_default_variant -%}
              <variant-radios class="main-product__variants" data-section="{{ section.id }}" data-url="{{ product.url }}">
                {%- for option in product.options_with_values -%}
                  <fieldset class="js-variant-fieldset" data-option-index="{{ option.position }}">
                    <div class="main-product__variant-header">
                      <legend>{{ option.name }}</legend>
                      <span class="main-product__variant-selected-value">
                        {{ option.selected_value }}
                      </span>
                    </div>
                    <div class="main-product__variant-options">
                      {%- for value in option.values -%}
                        <input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                               name="{{ option.name }}"
                               value="{{ value | escape }}"
                               form="{{ product_form_id }}"
                               {% if option.selected_value == value %}checked{% endif %}>
                        <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                          {{ value }}
                        </label>
                      {%- endfor -%}
                    </div>
                  </fieldset>
                {%- endfor -%}
                <script type="application/json">
                  {{ product.variants | json }}
                </script>
              </variant-radios>
            {%- endunless -%}
      
            <product-form class="product-form" data-product-form>
              {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                <input type="hidden" name="id" value="{{ current_variant.id }}">
      
                <div class="main-product__quantity-selector" data-quantity-selector>
                  {% for block in section.blocks %}
                    {% if block.type == 'quantity_option' %}
                      <div class="main-product__quantity-option">
                        <input
                          type="radio"
                          id="quantity-{{ block.id }}"
                          name="quantity_option"
                          value="{{ block.settings.quantity }}"
                          data-quantity="{{ block.settings.quantity }}"
                          data-discount="{{ block.settings.discount_percentage }}"
                          {% if forloop.first %}checked{% endif %}
                        >
                        <label for="quantity-{{ block.id }}">
                          <span class="main-product__quantity-label">
                            {{ block.settings.label }}
                            {% if block.settings.discount_text != blank %}
                              <span class="main-product__discount-badge">{{ block.settings.discount_text }}</span>
                            {% endif %}
                          </span>
                          <span class="main-product__quantity-price">
                            <span class="main-product__price-current" data-bundle-price></span>
                            <span class="main-product__price-compare" data-bundle-compare-price></span>
                          </span>
                        </label>
                      </div>
                    {% endif %}
                  {% endfor %}
                </div>
                
                <input class="quantity__input" type="hidden" name="quantity" value="1">
      
                 <button 
                  type="submit" 
                  name="add" 
                  class="main-product__add-to-cart-button"
                  {% unless current_variant.available %}disabled aria-disabled="true"{% endunless %}
                >
                  {% if current_variant.available %}
                    <span class="main-product__button-price" data-button-price>{{ current_variant.price | money }}</span>
                    <span class="main-product__button-divider">|</span>
                    <span class="main-product__button-text">Add to Cart</span>
                  {% else %}
                    <span class="main-product__button-text">Out of stock</span>
                  {% endif %}
                </button>
              {%- endform -%}
            </product-form>
            
            <div class="main-product__guarantees">
              {% if section.settings.guarantee1_icon != blank and section.settings.guarantee1_text != blank %}
                <div class="main-product__guarantee-item">
                  <img src="{{ section.settings.guarantee1_icon | image_url: width: 48 }}" alt="" loading="lazy">
                  <span>{{ section.settings.guarantee1_text }}</span>
                </div>
              {% endif %}
              {% if section.settings.guarantee2_icon != blank and section.settings.guarantee2_text != blank %}
                <div class="main-product__guarantee-item">
                  <img src="{{ section.settings.guarantee2_icon | image_url: width: 48 }}" alt="" loading="lazy">
                  <span>{{ section.settings.guarantee2_text }}</span>
                </div>
              {% endif %}
            </div>
      
            <div class="main-product__features">
              {%- for block in section.blocks -%}
                {%- if block.type == 'feature_item' -%}
                  <div class="main-product__feature-item">
                    {%- if block.settings.icon != blank -%}
                       <img src="{{ block.settings.icon | image_url: width: 60 }}" alt="" loading="lazy">
                    {%- endif -%}
                    <span>{{ block.settings.text }}</span>
                  </div>
                {%- endif -%}
              {%- endfor -%}
            </div>
          </div>
        </xo-grid>
      </xo-container>



      {% if enable_sticky_cart %}
        {% render 'sticky-cart', product: product, variants_block: section.blocks | where: 'type', 'variants' | first %}
      {% endif %}



      {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
      {%- if first_3d_model -%}
        <script type='application/json' id='xo-3d-product-json-{{ product.id }}'>
          {{ product.media | where: 'media_type', 'model' | json }}
        </script>
      {%- endif -%}
      {% render 'product-data', product: product %}
    </xo-product>
    {% render 'main-product-ld-json' %}
  </div>
</div>



<script>
class CustomProductScript {
  constructor(container) {
    this.container = container;
    this.sectionId = this.container.closest('.shopify-section').id.replace('shopify-section-', '');
    this.productUrl = this.container.querySelector('.main-product__variants')?.dataset.url || '';
    
    this.init();
  }


  init() {
    const variantRadios = this.container.querySelectorAll('.js-variant-fieldset input[type="radio"]');
    variantRadios.forEach(radio => radio.addEventListener('change', this.onVariantChange.bind(this)));


    const quantityRadios = this.container.querySelectorAll('input[name="quantity_option"]');
    quantityRadios.forEach(radio => radio.addEventListener('change', this.updatePrices.bind(this)));
    
    // Initial price calculation
    this.updatePrices();
  }


  onVariantChange(event) {
    const selectedOptions = Array.from(this.container.querySelectorAll('.js-variant-fieldset input:checked')).map(input => input.value);
    const matchedVariant = window.productVariants.find(variant => {
      if (!variant) return false;
      return selectedOptions.every((optionValue, index) => variant.options[index] === optionValue);
    });


    if (!matchedVariant) return;


    this.renderPage(matchedVariant.id, this.sectionId);
  }


  renderPage(variantId, sectionId) {
    const url = `${this.productUrl}?variant=${variantId}&section_id=${sectionId}`;
    
    fetch(url)
      .then(response => response.text())
      .then(responseText => {
        const html = new DOMParser().parseFromString(responseText, 'text/html');
        const destination = document.getElementById(`shopify-section-${sectionId}`);
        const source = html.getElementById(`shopify-section-${sectionId}`);


        if (source && destination) {
          destination.innerHTML = source.innerHTML;
        }


        // Update URL
        history.replaceState({}, '', `${this.productUrl}?variant=${variantId}`);
        
        // Re-initialize scripts on the new content
        new CustomProductScript(destination);
      })
      .catch(e => {
        console.error(e);
      });
  }


  updatePrices() {
    const mainPriceEls = this.container.querySelectorAll('[data-main-price]');
    const buttonPriceEl = this.container.querySelector('[data-button-price]');
    const hiddenQuantityInput = this.container.querySelector('input[name="quantity"]');
    
    const selectedOptions = Array.from(this.container.querySelectorAll('.js-variant-fieldset input:checked')).map(input => input.value);
    const matchedVariant = window.productVariants.find(variant => {
      if (!variant) return false;
      return selectedOptions.every((optionValue, index) => variant.options[index] === optionValue);
    });

    if (matchedVariant) {
      matchedVariant.options.forEach((optionValue, index) => {
        const fieldset = this.container.querySelector(`.js-variant-fieldset[data-option-index="${index + 1}"]`);
        if (fieldset) {
          const displaySpan = fieldset.querySelector('.main-product__variant-selected-value');
          if (displaySpan) {
            let displayText = optionValue;
      
            if (optionValue === "The Light Stuff (12oz)") {
              displayText = "The Signature Fill Blend";
            } else if (optionValue === "The Cool Stuff (12oz)") {
              displayText = "The Sapphire Fill Blend";
            }
      
            displaySpan.textContent = displayText;
          }
        }
      });
    }
    
    let currentVariantPrice = matchedVariant ? matchedVariant.price : {{ current_variant.price }};
    
    const selectedRadio = this.container.querySelector('input[name="quantity_option"]:checked');
    if (!selectedRadio) {
      if(mainPriceEls) mainPriceEls.forEach(el => el.textContent = this.formatMoney(currentVariantPrice));
      return;
    };


    const quantity = parseInt(selectedRadio.dataset.quantity, 10);
    const discount = parseFloat(selectedRadio.dataset.discount) / 100 || 0;
    
    this.container.querySelectorAll('.main-product__quantity-option').forEach(option => {
      const radio = option.querySelector('input');
      const qty = parseInt(radio.dataset.quantity, 10);
      const disc = parseFloat(radio.dataset.discount) / 100 || 0;
      const total = currentVariantPrice * qty;
      const discounted = total * (1 - disc);
      
      const bundlePriceEl = option.querySelector('[data-bundle-price]');
      const bundleComparePriceEl = option.querySelector('[data-bundle-compare-price]');


      if (bundlePriceEl) bundlePriceEl.textContent = this.formatMoney(discounted);
      if (bundleComparePriceEl) {
        if (disc > 0) {
          bundleComparePriceEl.textContent = this.formatMoney(total);
        } else {
          bundleComparePriceEl.textContent = '';
        }
      }
    });
    
    const selectedTotal = currentVariantPrice * quantity;
    const selectedDiscounted = selectedTotal * (1 - discount);


    if (hiddenQuantityInput) hiddenQuantityInput.value = quantity;
    if (buttonPriceEl) buttonPriceEl.textContent = this.formatMoney(selectedDiscounted);
    mainPriceEls.forEach(el => el.textContent = this.formatMoney(currentVariantPrice));
  }
  
  formatMoney(price) {
    const amount = (price / 100).toFixed(2);
    const format = {{ cart.currency.symbol | json }};
    return `${format}${amount}`;
  }
}


document.addEventListener('DOMContentLoaded', () => {
  const productSection = document.getElementById('shopify-section-{{ section.id }}');
  if (productSection) {
    new CustomProductScript(productSection);
  }
});
</script>



{% schema %}
{
  "name": "t:sections.main_product.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "select",
      "id": "product_media_style",
      "label": "t:sections.main_product.settings.product_media_style.label",
      "options": [
        {
          "value": "style-1",
          "label": "t:sections.main_product.settings.product_media_style.options__1.label"
        },
        {
          "value": "style-2",
          "label": "t:sections.main_product.settings.product_media_style.options__2.label"
        }
      ],
      "default": "style-1"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_cart",
      "default": true,
      "label": "t:sections.main_product.settings.enable_sticky_cart.label"
    },
    {
      "type": "header",
      "content": "Product Header"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Our original pillow, with adjustable fill."
    },
    {
      "type": "checkbox",
      "id": "show_custom_reviews",
      "label": "Show custom reviews display",
      "default": true
    },
    {
      "type": "text",
      "id": "rating_average",
      "label": "Average Rating",
      "default": "4.5"
    },
    {
      "type": "text",
      "id": "rating_count",
      "label": "Ratings Count",
      "default": "18,425"
    },
    {
      "type": "header",
      "content": "Guarantees"
    },
    {
      "type": "image_picker",
      "id": "guarantee1_icon",
      "label": "Guarantee 1 Icon"
    },
    {
      "type": "text",
      "id": "guarantee1_text",
      "label": "Guarantee 1 Text",
      "default": "Free Nationwide Shipping"
    },
    {
      "type": "image_picker",
      "id": "guarantee2_icon",
      "label": "Guarantee 2 Icon"
    },
    {
      "type": "text",
      "id": "guarantee2_text",
      "label": "Guarantee 2 Text",
      "default": "30-Day Money-Back Guarantee"
    }
  ],
  "blocks": [
    {
      "type": "quantity_option",
      "name": "Quantity Option",
      "limit": 4,
      "settings": [
        {
          "type": "number",
          "id": "quantity",
          "label": "Quantity",
          "default": 1
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "default": "Buy 1 Pillow"
        },
        {
          "type": "text",
          "id": "discount_text",
          "label": "Discount Badge Text (e.g. Save 10%)"
        },
        {
          "type": "range",
          "id": "discount_percentage",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Discount Percentage",
          "default": 0
        }
      ]
    },
    {
      "type": "feature_item",
      "name": "Feature Item",
      "limit": 8,
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Feature Text",
          "default": "Our standard design for all sleepers"
        }
      ]
    }
  ]
}
{% endschema %}
