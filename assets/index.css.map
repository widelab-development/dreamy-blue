{"version":3,"sources":["global/_font-faces.scss","settings/_breakpoints.scss","settings/_mixins.scss","global/_general.scss","settings/_variables.scss","global/_typography.scss","global/_buttons.scss"],"names":[],"mappings":"AAAA;EACI;EACA;EAEA;EACA;EACH;;AAGD;EACI;EACA;EAEA;EACA;EACH;;AAGD;EACI;EACA;EAEA;EACA;EACH;;ACtBD;AAkJA;ACpJA;ACEA;AAAA;AAAA;EAGC;;;AAGD;EACC;;;AAGD;EAEC;IACC;;;AAIF;EACC;EACA,aCUmB;EDTnB,WCYgB;EDXhB,aCUkB;EDTlB,aCWkB;EDVlB,OCTa;EDUb,YCTqB;EDUrB;EACA;EACA;EACA;;;AAGD;EACC;;;AAID;EACC;EACA;EACA;;;AEvCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOC,aDsBmB;;;AClBpB;EACC;;AJwDC;EIzDF;IAIE;;;;AAQD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYC,aDLsB;ECMtB;EACA;;AAID;AAAA;EAEC;;AJyBA;EI3BD;AAAA;IAKE;;;AAIF;AAAA;EAEC;;AJgBA;EIlBD;AAAA;IAKE;;;AAIF;AAAA;EAEC;;AJOA;EITD;AAAA;IAKE;;;AAIF;AAAA;EAEC;;AJFA;EIAD;AAAA;IAKE;;;AAIF;AAAA;EAEC;;AJXA;EISD;AAAA;IAKE;;;AAIF;AAAA;EAEC;;AJpBA;EIkBD;AAAA;IAKE;;;AAKF;EACC;EACA,ODpFY;ECqFZ;EACA;EACA;EACA;;AAEA;EAEC;;AAGD;EACC;;;AAMH;EACC,aDvFuB;ECwFvB;EACA;EACA;;AJpDC;EIgDF;IAOE;;;;AAIF;EACC,aDlGuB;ECmGvB;EACA;EACA;;AJ/DC;EI2DF;IAOE;;;;AAIF;EACC,aD7GuB;EC8GvB;EACA;EACA;;AJ1EC;EIsEF;IAOE;;;;AAIF;EACC,aDxHuB;ECyHvB;EACA;EACA;;AJrFC;EIiFF;IAOE;;;;AAIF;EACC,aDnIuB;ECoIvB;EACA;EACA;;AJhGC;EI4FF;IAOE;;;;AAIF;EACC,aD9IuB;EC+IvB;EACA;EACA;;AJ3GC;EIuGF;IAOE;;;;AAIF;EACC,aDzJuB;EC0JvB;EACA;EACA;;AJtHC;EIkHF;IAOE;;;;AAIF;EACC,aDpKuB;ECqKvB;EACA;EACA;;AJjIC;EI6HF;IAOE;;;;AAKF;EACC,aDjLmB;ECkLnB;EACA;EACA;;AJ7IC;EIyIF;IAOE;;;;AAIF;EACC,aD5LmB;EC6LnB;EACA;EACA;;AJxJC;EIoJF;IAOE;;;;AAIF;EACC,aDvMmB;ECwMnB;EACA;EACA;;AJnKC;EI+JF;IAOE;;;;AAIF;EACC,aDlNmB;ECmNnB;EACA;EACA;;;AAID;EACC,aD1NmB;EC2NnB;EACA;EACA;;;AC1PD;EACC,aF4BmB;EE3BnB;EACA;EACA;EACA;EACA,OFQa;EEPb;EACA;EACA;EACA;EACA;;ALyDC;EKpEF;IAcE;IACA;IACA;IACA;;;AAGD;EACC,kBFHc;;AEKd;EAEC,kBFLc","file":"index.css","sourcesContent":["@font-face {\n    font-family: 'twk_lausanne';\n    src: url('twklausanne-350.woff2') format('woff2'),\n         url('twklausanne-350.woff') format('woff');\n    font-weight: 350;\n    font-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n    font-family: 'twk_lausanne';\n    src: url('twklausanne-600.woff2') format('woff2'),\n         url('twklausanne-600.woff') format('woff');\n    font-weight: 600;\n    font-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n    font-family: 'beausite_fit_web';\n    src: url('BeausiteFitWeb-Light.woff2') format('woff2'),\n         url('BeausiteFitWeb-Light.woff') format('woff');\n    font-weight: 300;\n    font-style: normal;\n\tfont-display: swap;\n}\n\n\n","@use \"variables\" as *;\r\n@use \"sass:map\";\r\n/* stylelint-disable */\r\n\r\n// Breakpoint viewport sizes and media queries.\r\n//\r\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\r\n//\r\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\r\n//\r\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\r\n\r\n// Name of the next breakpoint, or null for the last breakpoint.\r\n//\r\n//    >> breakpoint-next(sm)\r\n//    md\r\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    md\r\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\r\n//    md\r\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\r\n\t$n: index($breakpoint-names, $name);\r\n\r\n\t@if not $n {\r\n\t\t@error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\r\n\t}\r\n\r\n\t@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n//\r\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    576px\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: map.get($breakpoints, $name);\r\n\t@return if($min !=0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width.\r\n// The maximum value is reduced by 0.02px to work around the limitations of\r\n// `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//\r\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    767.98px\r\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\r\n\t$max: map.get($breakpoints, $name);\r\n\t@return if($max and $max > 0, $max - .02, null);\r\n}\r\n\r\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\r\n// Useful for making responsive utilities.\r\n//\r\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    \"\"  (Returns a blank string)\r\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    \"-sm\"\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\r\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\r\n}\r\n\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\r\n\t@if $min {\r\n\t\t@media (min-width: $min) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $max {\r\n\t\t@media (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($lower, $breakpoints);\r\n\t$max: breakpoint-max($upper, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max ==null {\r\n\t\t@include media-breakpoint-up($lower, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min ==null {\r\n\t\t@include media-breakpoint-down($upper, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\t$next: breakpoint-next($name, $breakpoints);\r\n\t$max: breakpoint-max($next, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max ==null {\r\n\t\t@include media-breakpoint-up($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min ==null {\r\n\t\t@include media-breakpoint-down($next, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* stylelint-enable */","/*MIXINS*/\r\n\r\n@use \"sass:math\";\r\n\r\n@function rem($sizeValue: 10) {\r\n\t@return math.div($sizeValue, 10) + rem;\r\n}\r\n\r\n@mixin placeholder() {\r\n\t&::-webkit-input-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:-moz-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\topacity: 1;\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:-ms-input-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&::-ms-input-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:placeholder-shown {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin hover() {\r\n\t@media (hover: hover) and (pointer: fine) {\r\n\t\t&:hover {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n","@use \"../settings/init\" as *;\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n\tscroll-behavior: smooth;\r\n}\r\n\r\n@media screen and (prefers-reduced-motion: reduce) {\r\n\r\n\thtml {\r\n\t\tscroll-behavior: auto;\r\n\t}\r\n}\r\n\r\nbody {\r\n\tmargin: 0;\r\n\tfont-family: $font-twk-lausanne;\r\n\tfont-size: $font-size-base;\r\n\tfont-weight: $font-weight-base;\r\n\tline-height: $line-height-base;\r\n\tcolor: $text-color-base;\r\n\tbackground: $body-background-color;\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-ms-scroll-limit-x-max: 100%;\r\n\t-ms-scroll-limit-x-min: 0;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nfigure {\r\n\tmargin: 0;\r\n}\r\n\r\n// Make all images responsive\r\nimg {\r\n\theight: auto;\r\n\tmax-width: 100%;\r\n\tvertical-align: middle;\r\n}\r\n","// Breakpoints\r\n$grid-breakpoints: (\r\n\txs: 375px,\r\n\tsm: 576px,\r\n\tmd: 768px,\r\n\tlg: 992px,\r\n\txl: 1200px,\r\n\txxl: 1400px,\r\n\txxxl: 1600px,\r\n\tmax: 1800px\r\n);\r\n\r\n// Transitions\r\n$default-transition: 0.3s linear;\r\n\r\n// Colors\r\n$color-black: #000000;\r\n$color-neutral-cream: #FFFEFC;\r\n\r\n$color-blue-40: #ABD1F6;\r\n$color-blue-80: #8FBFEF;\r\n$color-blue-100: #6CB1EA;\r\n$color-blue-120: #58ACF2;\r\n\r\n$color-purple-80: #C49BC9;\r\n$color-purple-100: #B67BBA;\r\n\r\n$color-orange-80: #E2A383;\r\n$color-orange-100: #D88A68;\r\n\r\n// General settings\r\n$font-twk-lausanne: 'twk_lausanne'; \r\n$font-beausite-fit-web: 'beausite_fit_web';\r\n$font-weight-base: 350;\r\n$font-size-base: 1.8rem;\r\n$line-height-base: 160%;\r\n$text-color-base: $color-black;\r\n$body-background-color: $color-neutral-cream;","@use \"../settings/init\" as *;\r\n\r\nbutton,\r\na,\r\ninput,\r\nselect,\r\ntextarea,\r\np,\r\nul {\r\n\tfont-family: $font-twk-lausanne;\r\n}\r\n\r\n// Paragraph\r\n.content-for-layout p {\r\n\tmargin-top: rem(20);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tmargin-top: rem(30);\r\n\t}\r\n}\r\n\r\n// Headings\r\n\r\n.content-for-layout {\r\n\r\n\th1,\r\n\th2,\r\n\th3,\r\n\th4,\r\n\th5,\r\n\th6,\r\n\t.h1,\r\n\t.h2,\r\n\t.h3,\r\n\t.h4,\r\n\t.h5,\r\n\t.h6 {\r\n\t\tfont-family: $font-beausite-fit-web;\r\n\t\tfont-weight: 300;\r\n\t\tline-height: 110%;\r\n\r\n\t}\r\n\r\n\th1,\r\n\t.h1 {\r\n\t\tfont-size: rem(32);\r\n\r\n\t\t@include media-breakpoint-up(lg) {\r\n\t\t\tfont-size: rem(72);\r\n\t\t}\r\n\t}\r\n\r\n\th2,\r\n\t.h2 {\r\n\t\tfont-size: rem(28);\r\n\r\n\t\t@include media-breakpoint-up(lg) {\r\n\t\t\tfont-size: rem(60);\r\n\t\t}\r\n\t}\r\n\r\n\th3,\r\n\t.h3 {\r\n\t\tfont-size: rem(24);\r\n\r\n\t\t@include media-breakpoint-up(lg) {\r\n\t\t\tfont-size: rem(48);\r\n\t\t}\r\n\t}\r\n\r\n\th4,\r\n\t.h4 {\r\n\t\tfont-size: rem(20);\r\n\r\n\t\t@include media-breakpoint-up(lg) {\r\n\t\t\tfont-size: rem(36);\r\n\t\t}\r\n\t}\r\n\r\n\th5,\r\n\t.h5 {\r\n\t\tfont-size: rem(18);\r\n\r\n\t\t@include media-breakpoint-up(lg) {\r\n\t\t\tfont-size: rem(32);\r\n\t\t}\r\n\t}\r\n\r\n\th6,\r\n\t.h6 {\r\n\t\tfont-size: rem(16);\r\n\r\n\t\t@include media-breakpoint-up(lg) {\r\n\t\t\tfont-size: rem(24);\r\n\t\t}\r\n\t}\r\n\r\n\t// Links\r\n\ta:not([class]) {\r\n\t\tdisplay: inline-block;\r\n\t\tcolor: $color-black;\r\n\t\ttext-decoration: underline;\r\n\t\ttext-underline-offset: 0.25rem;\r\n\t\ttransition: text-decoration-color $default-transition;\r\n\t\ttext-decoration-thickness: rem(0.2);\r\n\r\n\t\t&:hover,\r\n\t\t&:focus-visible {\r\n\t\t\ttext-decoration-color: transparent;\r\n\t\t}\r\n\r\n\t\timg {\r\n\t\t\tborder: 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Beausite Typography Utility Classes\r\n.beausite-120 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(48);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(120);\r\n\t}\r\n}\r\n\r\n.beausite-100 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(40);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(100);\r\n\t}\r\n}\r\n\r\n.beausite-90 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(36);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(90);\r\n\t}\r\n}\r\n\r\n.beausite-72 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(32);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(72);\r\n\t}\r\n}\r\n\r\n.beausite-60 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(28);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(60);\r\n\t}\r\n}\r\n\r\n.beausite-48 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(24);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(48);\r\n\t}\r\n}\r\n\r\n.beausite-36 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(20);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(36);\r\n\t}\r\n}\r\n\r\n.beausite-32 {\r\n\tfont-family: $font-beausite-fit-web;\r\n\tfont-weight: 300;\r\n\tline-height: 110%;\r\n\tfont-size: rem(18);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(32);\r\n\t}\r\n}\r\n\r\n// TWK Lausanne Typography Utility Classes\r\n.twk-24 {\r\n\tfont-family: $font-twk-lausanne;\r\n\tfont-weight: 300;\r\n\tline-height: 100%;\r\n\tfont-size: rem(16);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(24);\r\n\t}\r\n}\r\n\r\n.twk-20 {\r\n\tfont-family: $font-twk-lausanne;\r\n\tfont-weight: 300;\r\n\tline-height: 100%;\r\n\tfont-size: rem(14);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(20);\r\n\t}\r\n}\r\n\r\n.twk-16 {\r\n\tfont-family: $font-twk-lausanne;\r\n\tfont-weight: 300;\r\n\tline-height: 100%;\r\n\tfont-size: rem(12);\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(16);\r\n\t}\r\n}\r\n\r\n.twk-14 {\r\n\tfont-family: $font-twk-lausanne;\r\n\tfont-weight: 300;\r\n\tline-height: 100%;\r\n\tfont-size: rem(14);\r\n\r\n}\r\n\r\n.twk-12 {\r\n\tfont-family: $font-twk-lausanne;\r\n\tfont-weight: 300;\r\n\tline-height: 100%;\r\n\tfont-size: rem(12);\r\n}","@use \"../settings/init\" as *;\r\n\r\n.btn {\r\n\tfont-family: $font-twk-lausanne;\r\n\tfont-size: rem(14);\r\n\tfont-weight: 300;\r\n\tline-height: 100%;\r\n\tborder-radius: rem(60);\r\n\tcolor: $color-black;\r\n\tpadding: rem(12) rem(24);\r\n\ttransition: background-color $default-transition;\r\n\tborder: none;\r\n\tcursor: pointer;\r\n\ttext-decoration: none;\r\n\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tfont-size: rem(18);\r\n\t\tline-height: 160%;\r\n\t\tborder-radius: rem(120);\r\n\t\tpadding: rem(12) rem(72);\r\n\t}\r\n\r\n\t&--primary {\r\n\t\tbackground-color: $color-blue-80;\r\n\r\n\t\t&:hover,\r\n\t\t&:focus-visible {\r\n\t\t\tbackground-color: $color-blue-120;\r\n\t\t}\r\n\t}\r\n}"]}