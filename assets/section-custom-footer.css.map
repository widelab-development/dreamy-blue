{"version":3,"sources":["settings/_breakpoints.scss","settings/_mixins.scss","sections/section-custom-footer.scss"],"names":[],"mappings":"AAaA;AAkJA;AC/JA;ACEA;EACC;EACA;;AF6EC;EE/EF;IAKE;;;AAGD;EACC;EACA;EACA;EACA;EACA;;AAEA;EAEC;;AAIF;EACC;EACA;EACA;;AFuDA;EE1DD;IAME;;;AAIA;EACC;EACA;EACA;EACA;;AF4CF;EEhDC;IAOE;IACA;;;AAIF;EACC;EACA;EACA;EACA;EACA;;AF+BF;EEpCC;IAQE;;;AAIA;EACC;EACA;EACA;;AFqBJ;EExBG;IAME;;;AAMJ;EACC;EACA;EACA;;AFSF;EEZC;IAME;;;AAIF;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AFSF;EElBC;IAYE;;;AAMJ;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACC;EACA;;AF7BD;EEgBD;IAiBE;;;AAIF;EACC;EACA;EACA;EACA;;AFzCA;EEqCD;IAOE;IACA;;;AAGD;EACC;EACA;;AFlDD;EEgDA;IAKE;;;AAKH;EACC;EACA;EACA;EACA;EACA;EACA;;AFhEA;EE0DD;IASE;IACA;;;AAKF;EACC;EACA;EACA;EACA;;AF7EA;EEyED;IAOE;IACA;;;AAIF;EACC;EACA;EACA;EACA;EACA;;AF1FA;EEqFD;IAQE;;;AAGD;EACC;EACA;;AFlGD;EEgGA;IAKE","file":"section-custom-footer.css","sourcesContent":["// Breakpoints\r\n$grid-breakpoints: (\r\n\txs: 375px,\r\n\tsm: 576px,\r\n\tmd: 768px,\r\n\tlg: 992px,\r\n\txl: 1200px,\r\n\txxl: 1400px,\r\n\txxxl: 1600px,\r\n\tmax: 1800px\r\n);\r\n\r\n@use \"sass:map\";\r\n/* stylelint-disable */\r\n\r\n// Breakpoint viewport sizes and media queries.\r\n//\r\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\r\n//\r\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\r\n//\r\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\r\n\r\n// Name of the next breakpoint, or null for the last breakpoint.\r\n//\r\n//    >> breakpoint-next(sm)\r\n//    md\r\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    md\r\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\r\n//    md\r\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\r\n\t$n: index($breakpoint-names, $name);\r\n\r\n\t@if not $n {\r\n\t\t@error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\r\n\t}\r\n\r\n\t@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n//\r\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    576px\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: map.get($breakpoints, $name);\r\n\t@return if($min !=0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width.\r\n// The maximum value is reduced by 0.02px to work around the limitations of\r\n// `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//\r\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    767.98px\r\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\r\n\t$max: map.get($breakpoints, $name);\r\n\t@return if($max and $max > 0, $max - .02, null);\r\n}\r\n\r\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\r\n// Useful for making responsive utilities.\r\n//\r\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    \"\"  (Returns a blank string)\r\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\r\n//    \"-sm\"\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\r\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\r\n}\r\n\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\r\n\t@if $min {\r\n\t\t@media (min-width: $min) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $max {\r\n\t\t@media (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($lower, $breakpoints);\r\n\t$max: breakpoint-max($upper, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max ==null {\r\n\t\t@include media-breakpoint-up($lower, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min ==null {\r\n\t\t@include media-breakpoint-down($upper, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\t$next: breakpoint-next($name, $breakpoints);\r\n\t$max: breakpoint-max($next, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max ==null {\r\n\t\t@include media-breakpoint-up($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min ==null {\r\n\t\t@include media-breakpoint-down($next, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* stylelint-enable */","/*MIXINS*/\r\n\r\n@use \"sass:math\";\r\n\r\n@function rem($sizeValue: 10) {\r\n\t@return math.div($sizeValue, 10) + rem;\r\n}\r\n\r\n@mixin placeholder() {\r\n\t&::-webkit-input-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:-moz-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\topacity: 1;\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:-ms-input-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&::-ms-input-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:placeholder-shown {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin hover() {\r\n\t@media (hover: hover) and (pointer: fine) {\r\n\t\t&:hover {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n","@use \"../settings/init\" as *;\n\n.custom-footer {\n\tbackground-color: var(--color-blue-80);\n\tpadding: rem(60) rem(20) rem(35);\n\n\t@include media-breakpoint-up (lg) {\n\t\tpadding: rem(120) rem(20) rem(120);\n\t}\n\n\ta {\n\t\ttext-decoration: underline;\n\t\ttext-underline-offset: rem(6);\n\t\ttransition: text-decoration-color var(--default-transition);\n\t\ttext-decoration-thickness: rem(1);\n\t\ttext-decoration-color: transparent;\n\n\t\t&:hover,\n\t\t&:focus-visible {\n\t\t\ttext-decoration-color: inherit;\n\t\t}\n\t}\n\n\t&__grid {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(2, minmax(0, 1fr));\n\t\tgap: rem(36) rem(48);\n\n\t\t@include media-breakpoint-up (lg) {\n\t\t\tgrid-template-columns: minmax(0, 500px) minmax(0, 500px) minmax(0, 500px) 1fr;\n\t\t}\n\n\t\t&-item {\n\t\t\t&-title {\n\t\t\t\tfont-size: rem(12);\n\t\t\t\tline-height: 160%;\n\t\t\t\tcolor: rgba(0, 0, 0, 0.40);\n\t\t\t\tmargin-bottom: rem(18);\n\n\t\t\t\t@include media-breakpoint-up (lg) {\n\t\t\t\t\tfont-size: rem(14);\n\t\t\t\t\tmargin-bottom: rem(26);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&-list {\n\t\t\t\tpadding: 0;\n\t\t\t\tlist-style: none;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tgap: rem(9);\n\n\t\t\t\t@include media-breakpoint-up (lg) {\n\t\t\t\t\tgap: rem(12);\n\t\t\t\t}\n\n\t\t\t\t&-item {\n\t\t\t\t\t&-link {\n\t\t\t\t\t\tfont-size: rem(14);\n\t\t\t\t\t\tline-height: 160%;\n\t\t\t\t\t\tcolor: var(--color-black);\n\n\t\t\t\t\t\t@include media-breakpoint-up (lg) {\n\t\t\t\t\t\t\tfont-size: rem(18);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&-text {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tgap: rem(9);\n\n\t\t\t\t@include media-breakpoint-up (lg) {\n\t\t\t\t\tgap: rem(12);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&-info {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: flex-start;\n\t\t\t\tgap: rem(13);\n\t\t\t\tfont-size: rem(16);\n\t\t\t\tline-height: 100%;\n\t\t\t\tmargin-top: rem(23);\n\t\t\t\tborder-top: 1px solid rgba(0, 0, 0, 0.1);\n\t\t\t\tpadding: 10px;\n\n\t\t\t\t@include media-breakpoint-down (lg) {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t&__text {\n\t\tborder-top: 1px solid rgba(0, 0, 0, 0.1);\n\t\tpadding: rem(10);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: flex-start;\n\t\tgap: rem(13);\n\t\tfont-size: rem(12);\n\t\tline-height: 160%;\n\t\tmargin-top: rem(4);\n\n\t\timg {\n\t\t\tflex-shrink: 0;\n\t\t\tmax-width: 60px;\n\t\t}\n\n\t\t@include media-breakpoint-up (lg) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t&__logo {\n\t\tmargin-top: rem(46);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: rem(6);\n\n\t\t@include media-breakpoint-up (lg) {\n\t\t\tmargin-top: rem(105);\n\t\t\tgap: rem(33);\n\t\t}\n\n\t\t&-label {\n\t\t\tfont-size: rem(10);\n\t\t\tline-height: 160%;\n\n\t\t\t@include media-breakpoint-up (lg) {\n\t\t\t\tfont-size: rem(48);\n\t\t\t}\n\t\t}\n\t}\n\n\t&__bottom {\n\t\tborder-top: 1px solid rgba(0, 0, 0, 0.20);\n\t\tpadding-top: rem(14);\n\t\tmargin-top: rem(8);\n\t\tdisplay: flex;\n\t\tgap: rem(10);\n\t\tjustify-content: space-between;\n\n\t\t@include media-breakpoint-up (lg) {\n\t\t\tpadding-top: rem(36);\n\t\t\tmargin-top: rem(35);\n\t\t}\n\n\t}\n\n\t&__copyright {\n\t\tfont-size: rem(9);\n\t\tcolor: rgba(0, 0, 0, 0.40);\n\t\tgap: rem(5);\n\t\tdisplay: flex;\n\n\t\t@include media-breakpoint-up (lg) {\n\t\t\tfont-size: rem(16);\n\t\t\tgap: rem(12);\n\t\t}\n\t}\n\n\t&__privacy {\n\t\tdisplay: flex;\n\t\tgap: rem(37);\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t\tmargin: 0;\n\n\t\t@include media-breakpoint-up (lg) {\n\t\t\tgap: rem(72);\n\t\t}\n\n\t\t&-link {\n\t\t\tfont-size: rem(9);\n\t\t\tcolor: rgba(0, 0, 0, 0.40);\n\n\t\t\t@include media-breakpoint-up (lg) {\n\t\t\t\tfont-size: rem(16);\n\t\t\t}\n\t\t}\n\t}\n}"]}