{"version":3,"sources":["settings/_breakpoints.scss","settings/_mixins.scss","sections/section-custom-pillow-talk.scss"],"names":[],"mappings":"AAcA;AAkJA;AChKA;ACEA;EACE;;AAEA;EAHF;IAII;;;AAIA;EADF;IAEI;IACA;;;AAIJ;EACE;EACA;EACA;EACA;;AAEA;EANF;IAOI;;;AAIJ;EACE;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;;AAEA;EAPF;IAQI;;;AAIJ;EACE;EACA;EACA;EACA;EACA;;AAEA;EAPF;IAQI;IACA;IACA;;;AAIJ;EACE;EACA;;AAEA;EACE;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AAIJ;EACE;;AAGF;EACE;EACA;EACA;;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EARF;IASI;;;AAGF;EACE;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;;AAEA;EAPF;IAQI;IACA;;;AAIJ;EACE;EACA;EACA;EACA;EACA;;AAEA;EAPF;IAQM;;;AAGJ;EACE;;AAIJ;EACE;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;;AAEA;EAPF;IAQM;;;AAIN;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EARF;IASI;IACA;IACA;;;;AAKN;EAEI;IACE;;EAEF;IACE;;;AAKN;EAEI;IACE;IACA;IACA;IACA;;EAGF;IACE;;EAIA;IACE;;EAEF;IACE;IACA;;EAIJ;IACE;;;AAKN;EACE;IACE;;EAEA;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;IACA","file":"section-custom-pillow-talk.css","sourcesContent":["// Breakpoints\n$grid-breakpoints: (\n\txs: 375px,\n\tsm: 576px,\n\tmd: 768px,\n\tlg: 992px,\n\tlg-2: 1140px,\n\txl: 1200px,\n\txxl: 1400px,\n\txxxl: 1600px,\n\tmax: 1800px\n);\n\n@use \"sass:map\";\n/* stylelint-disable */\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n\t$n: index($breakpoint-names, $name);\n\n\t@if not $n {\n\t\t@error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n\t}\n\n\t@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n\t$min: map.get($breakpoints, $name);\n\t@return if($min !=0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n\t$max: map.get($breakpoints, $name);\n\t@return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($name, $breakpoints);\n\n\t@if $min {\n\t\t@media (min-width: $min) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else {\n\t\t@content;\n\t}\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n\t$max: breakpoint-max($name, $breakpoints);\n\n\t@if $max {\n\t\t@media (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else {\n\t\t@content;\n\t}\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($lower, $breakpoints);\n\t$max: breakpoint-max($upper, $breakpoints);\n\n\t@if $min !=null and $max !=null {\n\t\t@media (min-width: $min) and (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $max ==null {\n\t\t@include media-breakpoint-up($lower, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $min ==null {\n\t\t@include media-breakpoint-down($upper, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($name, $breakpoints);\n\t$next: breakpoint-next($name, $breakpoints);\n\t$max: breakpoint-max($next, $breakpoints);\n\n\t@if $min !=null and $max !=null {\n\t\t@media (min-width: $min) and (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $max ==null {\n\t\t@include media-breakpoint-up($name, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $min ==null {\n\t\t@include media-breakpoint-down($next, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n/* stylelint-enable */","/*MIXINS*/\n\n@use \"sass:math\";\n\n@function rem($sizeValue: 10) {\n\t@return math.div($sizeValue, 10) + rem;\n}\n\n@mixin placeholder() {\n\t&::-webkit-input-placeholder {\n\t\t@content;\n\t}\n\n\t&:-moz-placeholder {\n\t\t@content;\n\t}\n\n\t&::-moz-placeholder {\n\t\topacity: 1;\n\t\t@content;\n\t}\n\n\t&:-ms-input-placeholder {\n\t\t@content;\n\t}\n\n\t&::-ms-input-placeholder {\n\t\t@content;\n\t}\n\n\t&:placeholder-shown {\n\t\t@content;\n\t}\n}\n\n@mixin hover() {\n\t@media (hover: hover) and (pointer: fine) {\n\t\t&:hover {\n\t\t\t@content;\n\t\t}\n\t}\n}\n","@use \"../settings/init\" as *;\n\n.pillow-talk {\n  padding: 0 0 rem(120) 0;\n\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n\n  xo-container {\n    @media (max-width: 768px) {\n      padding-left: 0;\n      padding-right: 0;\n    }\n  }\n\n  &__content {\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    gap: rem(140);\n    padding: rem(120) rem(90);\n\n    @media (max-width: 768px) {\n      padding: rem(36) 0;\n    }\n  }\n\n  &__info {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  &__heading {\n    font-family: var(--font-beausite-fit-web);\n    font-size: rem(72) !important;\n    font-weight: 300;\n    color: var(--color-black);\n    margin: 0 0 rem(8) 0 !important;\n\n    @media (max-width: 768px) {\n      font-size: rem(48) !important;\n    }\n  }\n\n  &__subheading {\n    font-family: var(--font-twk-lausanne);\n    font-size: rem(18);\n    line-height: 1.6;\n    color: var(--color-black);\n    margin: 0 !important;\n\n    @media (max-width: 768px) {\n      font-size: rem(14) !important;\n      max-width: rem(270);\n      margin: 0 auto !important;\n    }\n  }\n\n  &__nav {\n    display: flex;\n    gap: rem(16);\n\n    &--mobile {\n      display: none;\n    }\n  }\n\n  &__nav-button {\n    width: rem(48);\n    height: rem(48);\n    border-radius: 50%;\n    border: rem(1) solid var(--color-black);\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: var(--default-transition);\n\n    svg {\n      width: rem(14);\n      height: rem(24);\n    }\n  }\n\n  &__slider-wrapper {\n    overflow: hidden;\n  }\n\n  &__slide {\n    width: calc((100% - (2 * #{rem(8)})) / 3);\n    margin-right: rem(8);\n    min-height: rem(400);\n  }\n}\n\n.pillow-talk-card {\n  background-color: var(--color-white, #FFFFFF);\n  padding: rem(36);\n  min-height: rem(400);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    min-height: rem(320);\n  }\n\n  &__stars {\n    display: flex;\n    gap: 0;\n    margin-bottom: rem(12);\n  }\n\n  &__title {\n    font-family: var(--font-twk-lausanne) !important;\n    font-weight: 600 !important;\n    font-size: rem(18) !important;\n    color: var(--color-black);\n    margin: 0 0 rem(12) 0 !important;\n\n    @media (max-width: 768px) {\n      font-size: rem(14.4) !important;\n      margin: 0 0 rem(9.6) 0 !important;\n    }\n  }\n\n  &__text {\n    font-family: var(--font-twk-lausanne) !important;\n    font-size: rem(18);\n    line-height: 1.6;\n    color: var(--color-black);\n    flex-grow: 1;\n\n    @media (max-width: 768px) {\n        font-size: rem(14) !important;\n    }\n\n    p {\n      margin: 0;\n    }\n  }\n\n  &__footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: rem(24);\n  }\n\n  &__author {\n    font-family: var(--font-twk-lausanne) !important;\n    font-size: rem(18);\n    line-height: 1.6;\n    color: var(--color-black);\n    margin: 0 !important;\n\n    @media (max-width: 768px) {\n        font-size: rem(14.4) !important;\n    }\n  }\n\n  &__badge {\n    display: flex;\n    align-items: center;\n    font-size: rem(14);\n    padding: 0 rem(12);\n    border-radius: rem(30);\n    height: rem(22);\n\n    @media (max-width: 768px) {\n      font-size: rem(11.2);\n      height: rem(18);\n      padding: 0 rem(9.6);\n    }\n  }\n}\n\n@media (max-width: 1440px) {\n  .pillow-talk {\n    &__content {\n      gap: rem(60);\n    }\n    &__slide {\n      width: calc((100% - #{rem(8)}) / 2);\n    }\n  }\n}\n\n@media (max-width: 992px) {\n  .pillow-talk {\n    &__content {\n      display: flex;\n      flex-direction: column;\n      gap: rem(22);\n      padding: rem(40);\n    }\n    \n    &__info {\n      justify-content: flex-start;\n    }\n\n    &__nav {\n      &--desktop {\n        display: none;\n      }\n      &--mobile {\n        display: flex;\n        justify-content: flex-start;\n      }\n    }\n    \n    &__slide {\n      width: 60%;\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .pillow-talk {\n    padding: rem(40) 0;\n\n    &__content {\n      padding: rem(36) rem(20);\n    }\n\n    &__heading {\n      font-size: rem(48);\n    }\n\n    &__subheading {\n      font-size: rem(16);\n    }\n    \n    &__info {\n      text-align: center;\n    }\n    \n    &__slider-wrapper {\n      margin: 0 rem(-24);\n    }\n    \n    .pillow-talk__slider {\n      padding: 0 0 0 rem(24);\n    }\n\n    &__slide {\n      width: 80%;\n      margin-right: rem(16);\n    }\n  }\n}\n"]}